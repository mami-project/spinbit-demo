.DEFAULT_GOAL := help

NODES := $(shell docker-compose config --services | xargs)

up: config ; docker-compose up -d

build-up: config ; docker-compose up --build -d

down: ; docker-compose down

top: ; docker-compose top

bridge: ; ./.make_bridge.sh

traffic: ; ./.traffic_and_observer_setup.sh

ssh-vpp: ; cd etc/router/vpp_vagrant/vagrant && vagrant ssh

vpp-down: ; cd etc/router/vpp_vagrant/vagrant && vagrant halt

dash: ; bin/upload-dashboard.bash dashboards/overview.json

# Dynamically create each sh-<node> rule
define interactive_shell_template
sh-$(1): ; docker exec -ti $(1) bash
endef

$(foreach node,$(NODES),$(eval $(call interactive_shell_template,$(node))))

# Create a window with tiles for each node (iTerm2 / MacOSX only)
iterms: up ; osascript utils/iterm2-interactive.scpt $(shell pwd)

help:
	@echo
	@echo "Available targets:"
	@echo
	@echo " * up            start the testbed"
	@echo " * build-up      build images before starting the testbed"
	@echo " * down          stop the testbed"
	@echo " * top           display running processes"
	@echo " * bridge        creates bridges between client <-> VPP <-> server and completes Vagrant file"
	@echo " * sh-<node>     start interactive shell on <node>"
	@echo "                 where <node> is one of: $(NODES)"
	@echo " * ssh-vpp       ssh to Vagrant VM in which VPP is running"
	@echo " * config        generate netemd configuration files"
	@echo " * traffic       starts traffic generation and observer (vpp) setup"
	@echo " * dash          upload dashboard to chronograf"
	@echo " * clean         remove autogenerated config files"
	@echo " * remove-br     removes the created bridges and Vagrant file"
	@echo " * vpp-down      brings Vagrant VM (with VPP) down"
	@echo

remove-br: ; docker network rm client-br && docker network rm server-br && rm etc/router/vpp_vagrant/vagrant/Vagrantfile

clean: clean-config

#
# Automatic generation of netemd configuration files
#
include .env


%.json: %.json.in
	@sed -e "s/@CLIENT_DOMAIN_ROUTER_ADDR@/${CLIENT_DOMAIN_ROUTER_ADDR}/" \
	     -e "s/@CLIENT_DOMAIN_CLIENT_ADDR@/${CLIENT_DOMAIN_CLIENT_ADDR}/" \
	     -e "s/@CLIENT_DOMAIN_ROUTER_OBS_ADDR@/${CLIENT_DOMAIN_ROUTER_OBS_ADDR}/" \
	     -e "s/@SERVER_DOMAIN_ROUTER_ADDR@/${SERVER_DOMAIN_ROUTER_ADDR}/" \
	     -e "s/@SERVER_DOMAIN_ROUTER_OBS_ADDR@/${SERVER_DOMAIN_ROUTER_OBS_ADDR}/" \
	     -e "s/@SERVER_DOMAIN_SERVER_ADDR@/${SERVER_DOMAIN_SERVER_ADDR}/" $< > $@

define autogen_config
etc/$(1)/netemd-config.json: etc/$(1)/netemd-config.json.in

AUTOGEN_CONFIGFILES += etc/$(1)/netemd-config.json
endef

$(foreach node,client server router,$(eval $(call autogen_config,$(node))))

config: $(AUTOGEN_CONFIGFILES)

clean-config: ; $(RM) $(AUTOGEN_CONFIGFILES)

.PHONY: up build-up down iterms top config clean clean-config bridge remove-br traffic ssh-vpp vpp-down
